factors(87109)
factors(factors(87109))
factors(7919)
source('~/.active-rstudio-document')
phi(6)
source('~/.active-rstudio-document')
phi(6)
phi(10)
phi(100)
phi(200)
phi(2000)
phi(20009)
library(pracma)
primes(10,20)
primes(20)
?primes
primes(n = 10,  20)
primes(10, n = 20)
primes(c(10,20))
primes(20,10)
primes(n1=10, n2=20)
?primes
?primes()
library(numbers)
Primes(n1=10, n2 = 20)
source('~/.active-rstudio-document')
try1()
Primes(1e6,1e7)
source('~/.active-rstudio-document')
try1()
phi(7)
phi(7)*&
phi(7)*&
phi(7)*7
phi(6)
phi(10)
source('~/.active-rstudio-document')
sepSortDig(4321)
source('~/.active-rstudio-document')
sepSortDig(4321)
source('~/.active-rstudio-document')
sepSortDig(4321)
source('~/.active-rstudio-document')
sepSortDig(4321)
strsplit("abc",split = "")
source('~/.active-rstudio-document')
strsplit("abc",split = "")
sepSortDig(4321)
source('~/.active-rstudio-document')
sepSortDig(4321)
source('~/.active-rstudio-document')
sepSortDig(4321)
source('~/.active-rstudio-document')
sepSortDig(432156)
sepSortDig(432156)
a <- sepSortDig(432156)
a==sepSortDig(432156)
sum(a==sepSortDig(432156))
source('~/.active-rstudio-document')
sepSortDig(432156)
outer(1:10,2:11,*)
outer(1:10,2:11,"*")
outer(1:10,1:10,"*")
a <- outer(1:10,1:10,"*")
length(a)
dim(a)
for(i in a){print(i)}
a
unique(a)
as.vector(a)
unique(as.vector(a))
num <- 1e7
upper <- sqrt(1e7)+1000
lower <- upper-2000
x <- Primes(lower, upper)
n <- unique(as.vector(outer(x,x,"*")))
num <- 1e7
upper <- ceiling(sqrt(1e7))+1000
lower <- upper-2000
x <- Primes(lower, upper)
n <- unique(as.vector(outer(x,x,"*")))
lower
head(x)
dim(x)
length(x)
phi(6)
phi2(6)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
phi(6)
source('~/.active-rstudio-document')
phi(6)
source('~/.active-rstudio-document')
phi(6)
phi(10)
source('~/.active-rstudio-document')
try2
try2()
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
try2()
n <- 1000
thePrimes <- Primes(max(n))
phi <- function(n){
n*prod(1-1/x[n%%thePrimes==0])
}
phi(10)
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
phi(10)
phi(6)
phi(9)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
try2()
head(x)
length(x)
n
num <- 1e7
upper <- ceiling(sqrt(1e7))+1000
lower <- upper-2000
x <- Primes(lower, upper)
n <- unique(as.vector(outer(x,x,"*")))
thePrimes <- Primes(max(n))
x
length(n)
dim(n)
tail(n)
max(n)
tail(thePrimes)
length(thePrimes)
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
try2()
source('~/.active-rstudio-document')
phiii(6)
source('~/.active-rstudio-document')
main()
source('~/.active-rstudio-document')
main()
source('~/.active-rstudio-document')
main()
source('~/.active-rstudio-document')
main()
traceback()
source('~/.active-rstudio-document')
main()
source('~/.active-rstudio-document')
main()
source('~/.active-rstudio-document')
main()
phi(123456)
phi(1234566)
phi(12345669)
Primes(123456)
length(Primes(123456))
source('~/.active-rstudio-document')
main()
source('~/.active-rstudio-document')
main()
source('~/.active-rstudio-document')
main()
source('~/.active-rstudio-document')
main()
source('~/.active-rstudio-document')
main()
x <- rnorm(10)
x
x <- printrnorm(3))
x <- print(rnorm(3))
x <- print(rnorm(3))
x <- print(rnorm(3))
set.seed(1)
x <- print(rnorm(3))
x <- print(rnorm(3))
x <- print(rnorm(3))
source('~/R/Hopkins_Data_Science_Specialization/Reproducible_Research/Course_Project_2/course_project_2.R')
head(storm_data)
head(storm_data[1:3])
head(storm_data[2])
head(storm_data[4:7])
head(storm_data[8:12])
head(storm_data[11:12],20)
mean(storm_data[11:12])
mean(storm_data[11])
mean(storm_data[12])
names(storm_data)
head(storm_data[c("FATALITIES","INJURIES")])
head(storm_data[c("FATALITIES","INJURIES")],40)
head(storm_data[c("FATALITIES","INJURIES", "EVTYPE")],40)
names(storm_data)
head(storm_data)
table((storm_data$EVTYPE))
library(ggplot2)
library(gridExtra)
ggplot(data = storm_data, aes(FATALITIES)) + geom_bar()
ggplot(data = storm_data, aes(FATALITIES)) + geom_bar() + facet(EVTYPE)
ggplot(data = storm_data, aes(FATALITIES)) + geom_bar() + facet(EVTYPE)
ggplot(data = storm_data, aes(FATALITIES)) + geom_bar() + facet(aes(EVTYPE))
ggplot(data = storm_data, aes(FATALITIES)) + geom_bar() + facet(aes(FATALITIES~EVTYPE))
ggplot(data = storm_data, aes(FATALITIES)) + geom_bar() + facet(FATALITIES~EVTYPE)
ggplot(data = storm_data, aes(FATALITIES~EVTYPE)) + geom_bar()
ggplot(data = storm_data, mapping = aes(EVTYPE)) + geom_bar()
ggplot(data = storm_data, mapping = aes(FATALITIES)) + geom_bar()
ggplot(data = storm_data, mapping = aes(EVTYPE)) + geom_bar(weight = FATALITIES)
ggplot(data = storm_data, mapping = aes(EVTYPE)) + geom_bar()
ggplot(data = storm_data, mapping = aes(EVTYPE)) + geom_bar(binwidth=1)
ggplot(data = storm_data, mapping = aes(EVTYPE, FATALITIES)) + geom_bar()
ggplot(data = storm_data, mapping = aes(EVTYPE, FATALITIES)) + geom_bar(stat = "bin")
ggplot(data = storm_data, mapping = aes(EVTYPE)) + geom_bar(stat = "bin")
ggplot(data = storm_data, mapping = aes(EVTYPE)) + geom_bar(stat = "FATALITIES")
events <- with(storm_data, tapply(EVTYPE, FATALITIES, sum))
head(storm_data$FATALITIES)
class(head(storm_data$FATALITIES))
events <- with(storm_data, tapply(FATALITIES, EVTYPE, sum))
events
sort(events)
(events)[1:20]
(events)[1,1]
(events)[1]
(events)[2]
events <- sort(events)[1:20]
events
events <- with(storm_data, tapply(FATALITIES, EVTYPE, sum))
events <- sort(events, decreasing = TRUE)[1:20]
events
qplot(events, geom = "bar")
qplot(events, geom = "bar", binwidth = names(events))
qplot(events, names(events))
qplot(events, geom = bar)
qplot(events, geom = "bar")
qplot(events, names(events), geom = "bar")
qplot(events, names(events), geom = "point")
qplot(names(events), events, geom = "point")
qplot(names(events), events, geom = "bar")
events2 <- with(storm_data, aggregate(FATALITIES, EVTYPE, sum))
events2 <- with(storm_data, aggregate(FATALITIES, by = EVTYPE, sum))
events2 <- with(storm_data, aggregate(FATALITIES, by = list(EVTYPE), sum))
sort(events2, decreasing = TRUE)
head(events2)
event_fatalities <- with(storm_data, aggregate(FATALITIES, by = list(EVTYPE), sum))
dim(event_fatalities)
names(event_fatalities) <- c("event","total.fatalities")
head(event_fatalities)
event_fatalities[witch(sort(event_fatalities$total.fatalities, decreasing = TRUE)),"event"]
event_fatalities[which(sort(event_fatalities$total.fatalities, decreasing = TRUE)),"event"]
event_fatalities[which(sort(event_fatalities$total.fatalities, decreasing = TRUE)==event_fatalities$total.fatalities),"event"]
sort(event_fatalities$total.fatalities, decreasing = TRUE)
order(event_fatalities$total.fatalities, decreasing = TRUE)
event_fatalities[order(event_fatalities$total.fatalities, decreasing = TRUE),"event"]
event_fatalities[order(event_fatalities$total.fatalities, decreasing = TRUE),"event"]
event_fatalities <- event_fatalities[1:10,]
event_fatalities
event_fatalities <- with(storm_data, aggregate(FATALITIES, by = list(EVTYPE), sum))
names(event_fatalities) <- c("event","total.fatalities")
# re-order and use the top 10
event_fatalities[order(event_fatalities$total.fatalities, decreasing = TRUE),"event"]
event_fatalities <- event_fatalities[1:10,]
event_fatalities
event_fatalities <- with(storm_data, aggregate(FATALITIES, by = list(EVTYPE), sum))
names(event_fatalities) <- c("event","total.fatalities")
# re-order and use the top 10
event_fatalities[order(event_fatalities$total.fatalities, decreasing = TRUE),"event"]
event_fatalities[1:20]
event_fatalities[1:20,]
# re-order and use the top 10
event_fatalities <- event_fatalities[order(event_fatalities$total.fatalities, decreasing = TRUE),"event"]
event_fatalities <- event_fatalities[1:10,]
event_fatalities
event_fatalities <- with(storm_data, aggregate(FATALITIES, by = list(EVTYPE), sum))
names(event_fatalities) <- c("event","total.fatalities")
# re-order and use the top 10
event_fatalities <- event_fatalities[order(event_fatalities$total.fatalities, decreasing = TRUE),]
event_fatalities <- event_fatalities[1:10,]
event_fatalities
geom_bar()
print(g1)
g1 <- ggplot(data = event_fatalities, aes(event, total.fatalities)) +
geom_bar()
g1
g1 <- ggplot(data = event_fatalities, aes(factor(event), total.fatalities)) +
geom_bar()
print(g1)
g1 <- ggplot(data = event_fatalities, aes(factor(event), total.fatalities)) +
geom_bar(stat = "bin")
g1
r(gear), y = meanwt)) + geom_bar(stat = "identity")
?geom_bar
g1 <- ggplot(data = event_fatalities, aes(factor(event), total.fatalities)) +
geom_bar(stat = "identity")
g1
event_fatalities
g1 <- ggplot(data = event_fatalities, aes(event, total.fatalities)) +
geom_bar(stat = "identity")
print(g1)
print(g1)
g1 <- ggplot(data = event_fatalities, aes(event, total.fatalities)) +
geom_bar(stat = "identity") +
scale_y_continuous()
print(g1)
g1 <- ggplot(data = event_fatalities, aes(reorder(event, total.fatalities))) +
geom_bar(stat = "identity") +
scale_y_continuous()
print(g1)
g1 <- ggplot(data = event_fatalities, aes(reorder(event, total.fatalities)),total.fatalities) +
geom_bar(stat = "identity") +
scale_y_continuous()
print(g1)
g1 <- ggplot(data = event_fatalities, aes(event, total.fatalities)) +
geom_bar(stat = "identity") +
scale_y_continuous()
print(g1)
g1 <- ggplot(data = event_fatalities, aes(total.fatalities, events)) +
geom_bar(stat = "identity") +
scale_y_continuous()
print(g1)
g1 <- ggplot(data = event_fatalities, aes(total.fatalities, factor(events))) +
geom_bar(stat = "identity") +
scale_y_continuous()
print(g1)
g1 <- ggplot(data = event_fatalities, aes(event, total.fatalities)) +
geom_bar(stat = "identity")
print(g1)
g1 <- ggplot(data = event_fatalities, aes(factor(event), total.fatalities)) +
geom_bar(stat = "identity")
print(g1)
g1 <- ggplot(data = event_fatalities, aes(x = reorder(event, -total.fatalities), total.fatalities)) +
geom_bar(stat = "identity")
print(g1)
g1 <- ggplot(data = event_fatalities, aes(x = reorder(event, -total.fatalities), total.fatalities)) +
geom_bar(stat = "identity") +
labs(title = "Total Fatalities per Event", xlab = "Event", ylab = "total fatalities")
print(g1)
g1 <- ggplot(data = event_fatalities, aes(x = reorder(event, -total.fatalities), total.fatalities)) +
geom_bar(stat = "identity") +
labs(title = "Total Fatalities per Event", xlab = "Event", ylab = "total fatalities")
print(g1)
g1 <- ggplot(data = event_fatalities, aes(x = reorder(event, -total.fatalities), total.fatalities), xlab = "Event", ylab = "total fatalities") +
geom_bar(stat = "identity") +
labs(title = "Total Fatalities per Event")
print(g1)
?labs
labels
?labels
g1 <- ggplot(data = event_fatalities, aes(x = reorder(event, -total.fatalities), total.fatalities)) +
geom_bar(stat = "identity") +
labs(title = "Total Fatalities per Event") +
xlab("Event") +
ylab("total fatalities")
print(g1)
# get the sum of injuries for each event type
event_injuries <- with(storm_data, aggregate(INJURIES, by = list(EVTYPE), sum))
names(event_injuries) <- c("event","total.injuries")
# re-order and use the top 10
event_injuries <- event_injuries[order(event_injuries$total.injuries, decreasing = TRUE),]
event_injuries <- event_injuries[1:10,]
#graph
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
labs(title = "Total Injuries per Event") +
xlab("Event") +
ylab("total injuries")
print(g2)
source('~/R/Hopkins_Data_Science_Specialization/Reproducible_Research/Course_Project_2/course_project_2.R', echo=TRUE)
event_injuries
storm_data[which.max("INJURIES"),]
head(storm_data$INJURIES)
class(storm_data$INJURIES)
sum(is.na(storm_data$INJURIES))
sum(is.numeric(storm_data$INJURIES))
storm_data$INJURIES[1:10]
is.numeric(storm_data$INJURIES[1:10])
sum(storm_data$INJURIES[1:10])
sum(storm_data$INJURIES)
storm_data[which.max(storm_data$INJURIES),]
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
labs(title = "Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
labs(title = "Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtile("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtile("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, hjust = 3))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtile("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, hjust = 30))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtile("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, pch = 19))
print(g2)
?theme
?element_text
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtile("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 10))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtile("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 50))
print(g2)
?element_text
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtile("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, size = 50))
print(g2)
#graph
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtitle("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, size = 50))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtitle("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, size = 10))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtitle("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 10))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtitle("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, size = 10))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtitle("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, vjust = 0, size = 10))
print(g2)
g2 <- ggplot(data = event_injuries, aes(x = reorder(event, -total.injuries), total.injuries)) +
geom_bar(stat = "identity") +
ggtitle("Total Injuries per Event") +
xlab("Event") +
ylab("total injuries") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 20))
print(g2)
g1 <- ggplot(data = event_fatalities, aes(x = reorder(event, -total.fatalities), total.fatalities)) +
geom_bar(stat = "identity") +
ggtitle("Total Fatalities per Event") +
xlab("Event") +
ylab("total fatalities") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12))
print(g1)
